
"""
    This script will analyze the daily trends to see if there is any BUY/SELL signal
    for today (and yesterday).
"""
from datetime import datetime, timedelta
import yfinance as yf
import backtrader as bt

from MCerebro import MCerebro
from sma_cross import MySmaCrossStrategy, save_backtrader_plot

default_symbols = ['NVDA', 'AAPL', 'AMZN', 'FB', 'GOOGL', 'NFLX', 'TSLA', 'MSFT', 'JPM', 'V', 'MA',
           'JNJ', 'UNH', 'PG', 'HD', 'DIS', 'BAC', 'KO', 'PEP', 'VZ',
           'T', 'INTC', 'CSCO', 'WMT', 'MCD', 'COST', 'XOM', 'CVX', 'BA', 'MMM',
           'GE', 'CAT', 'IBM', 'GS', 'MS', 'AXP', 'WFC', 'JPM', 'AMGN', 'MRK',
           'PFE', 'NKE', 'WBA', 'UNP', 'UPS', 'FDX', 'LMT', 'RTX', 'TMO', 'ABBV']
# default_symbols = ['AMZN']

ndays = 50
today = datetime.now().strftime('%Y-%m-%d')
start_date = (datetime.now().replace(day=1) - timedelta(days=ndays)).strftime('%Y-%m-%d')

if __name__ == '__main__':

    # Collect all signals and image paths
    all_recent_signals = []
    image_paths = []

    for symbol in default_symbols:
        # Check data from the database
        print(f"Analyzing {symbol} from {start_date} to {today}")

        symbol = symbol.upper()
        hist = yf.download(
            symbol,
            start=start_date,
            end=today
        )
        hist.columns = hist.columns.get_level_values(0)
        data = bt.feeds.PandasData(dataname=hist)
        if len(hist) < 35:
            print(f"Not enough data for {symbol}, skipping...")
            continue

        # Configuring and running cerebro
        cerebro = MCerebro()
        cerebro.addstrategy(MySmaCrossStrategy)
        data_feed = cerebro.adddata(data)

        results = cerebro.run()
        plot_filename = f"plots/backtest_plot_{symbol}_{today}.png"
        save_backtrader_plot(cerebro, filename=plot_filename, dpi=300, style="candlestick")

        strategy = results[0]
        signals = strategy.signals
        signals.sort(key=lambda x: x[1])

        # check if there is signals N last days
        N = 5
        cutoff_date_str = (datetime.now() - timedelta(days=N)).strftime('%Y-%m-%d')
        recent_signals = [s for s in signals if str(s[1]) >= cutoff_date_str]


        if recent_signals:
            print(f"Recent signals for {symbol}:")
            for signal in recent_signals:
                all_recent_signals.append({
                    'symbol': symbol,
                    'action': signal[0],
                    'date': signal[1]
                })

            # Add plot to attachments
            image_paths.append(plot_filename)

    # =======================
    # THE CODE BELOW IS GENERATED BY CLAUDE, DO NOT REUSE IT
    # Send summary email if there are any signals
    if all_recent_signals:
        from mail_notification import send_email

        # Group signals by action for better organization
        buy_signals = [s for s in all_recent_signals if s['action'].upper() == 'BUY']
        sell_signals = [s for s in all_recent_signals if s['action'].upper() == 'SELL']

        # Create email content
        subject = f"📈 Trading Signals Alert - {len(all_recent_signals)} Active Signal(s)"

        message = f"""🚀 TRADING SIGNALS SUMMARY


    📊 ANALYSIS PERIOD: Last {N} days
    📅 REPORT DATE: {today}
    🎯 TOTAL SIGNALS: {len(all_recent_signals)}

    """

        if buy_signals:
            message += """🟢 BUY SIGNALS
"""
            for signal in buy_signals:
                message += f"   💰 {signal['symbol']} → BUY on {signal['date']}\n"
            message += "\n"

        if sell_signals:
            message += """🔴 SELL SIGNALS
"""
            for signal in sell_signals:
                message += f"   💸 {signal['symbol']} → SELL on {signal['date']}\n"
            message += "\n"

        message += f"""📋 SIGNAL SUMMARY TABLE
    {'SYMBOL':<8} {'ACTION':<6} {'DATE':<12}
"""

        for signal in sorted(all_recent_signals, key=lambda x: (x['date'], x['symbol'])):
            action_emoji = "🟢" if signal['action'].upper() == 'BUY' else "🔴"
            message += f"{signal['symbol']:<8} {action_emoji} {signal['action']:<4} {signal['date']:<12}\n"

        message += f"""
    📈 Charts attached for detailed analysis
    ⚠️  Please review attached plots before making trading decisions
    🤖 Generated by Automated Trading Signal System

"""

        # Send the summary email
        send_email(
            to_email="ryanrasoarahona@gmail.com",
            subject=subject,
            message=message,
            image_paths=image_paths
        )

        print(f"\n📧 Summary email sent with {len(all_recent_signals)} signals and {len(image_paths)} chart(s)")
    else:
        print("\n📊 No recent signals found - no email sent")

